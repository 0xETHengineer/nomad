syntax = "proto3";

package hashicorp.nomad.stream.proto;

import "google/protobuf/struct.proto";

option go_package = "pbstream";

service EventStream {
  rpc Subscribe(SubscribeRequest) returns (stream EventBatch) {}
}

enum Topic {
  All = 0;
  Deployment = 1;
  Eval = 2;
  Alloc = 3;
  Job = 4;
  Node = 5;
}


message TopicFilter {
  Topic Topic = 1;
  repeated string FilterKeys = 2;
}

message SubscribeRequest {
  string Token = 1;
  uint64 Index = 2;
  string Namespace = 3;

  repeated TopicFilter Topics = 4;
  // TODO see if we prefer map or repeated TopicFilter
  /* map<string, TopicFilter> Topics = 4; */
}

message EventBatch {
  uint64 Index = 1;

  repeated Event Event = 2;
}

message Node {
  string ID = 1;
  string Datacenter = 2;
  string Name = 3;
}

message NodeEvent {
  Node Node = 1;
}

message JobEvent {
  Job Job = 1;
}

message Job {
  string ID = 1;
  string Name = 3;
}

message DeploymentEvent {
  Deployment Deployment = 1;
}

message Deployment {
  string ID = 1;
  string JobID = 2;
}

message EvaluationEvent {
  Evaluation Evaluation = 1;
}

message Evaluation {
  string ID = 1;
  string JobID = 3;
}

message Event {
  Topic Topic = 1;
  string Type = 2;
  string Key = 3;
  string Namespace = 4;
  repeated string FilterKeys = 5;
  uint64 Index = 6;

  oneof Payload {
    NodeEvent NodeEvent = 7;
    JobEvent JobEvent = 8;
    EvaluationEvent EvaluationEvent = 9;
    DeploymentEvent DeploymentEvent = 10;
  }
}
