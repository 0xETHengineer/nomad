// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "HashiCorp Support",
            "url": "https://support.hashicorp.com/hc/en-us",
            "email": "nomad@hashicorp.support"
        },
        "license": {
            "name": "Mozilla Public License, version 2.0",
            "url": "https://github.com/hashicorp/nomad/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/namespaces": {
            "get": {
                "description": "get namespaces by region",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespaces"
                ],
                "summary": "Get Namespaces list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "string region - filters namespaces based on region",
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "string prefix - filters namespaces based on prefix",
                        "name": "prefix",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.Namespace"
                            }
                        }
                    },
                    "400": {
                        "description": "unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "structs.Namespace": {
            "type": "object",
            "properties": {
                "createIndex": {
                    "description": "Raft Indexes",
                    "type": "integer"
                },
                "description": {
                    "description": "Description is a human readable description of the namespace",
                    "type": "string"
                },
                "hash": {
                    "description": "Hash is the hash of the namespace which is used to efficiently replicate\ncross-regions.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "modifyIndex": {
                    "type": "integer"
                },
                "name": {
                    "description": "Name is the name of the namespace",
                    "type": "string"
                },
                "quota": {
                    "description": "Quota is the quota specification that the namespace should account\nagainst.",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "127.0.0.1:4646",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "Nomad API",
	Description: "Nomad HTTP API.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
