{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of the Nomad v1 API.",
    "title": "nomad.",
    "contact": {
      "email": "support@hashicorp.com"
    },
    "license": {
      "name": "MIT 2",
      "url": "https://github.com/hashicorp/nomad/blob/main/LICENSE"
    },
    "version": "1.0.0"
  },
  "host": "localhost:4646",
  "basePath": "/v1/",
  "paths": {
    "/job/{jobName}/allocations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "List allocations for the specified job. See https://www.nomadproject.io/api-docs/allocations#list-allocations.",
        "operationId": "getJobAllocations",
        "parameters": [
          {
            "$ref": "#/parameters/JobNameParam"
          },
          {
            "$ref": "#/parameters/AllParam"
          },
          {
            "$ref": "#/parameters/RegionParam"
          },
          {
            "$ref": "#/parameters/StaleParam"
          },
          {
            "$ref": "#/parameters/PrefixParam"
          },
          {
            "$ref": "#/parameters/NamespaceParam"
          },
          {
            "$ref": "#/parameters/PerPageParam"
          },
          {
            "$ref": "#/parameters/NextTokenParam"
          }
        ],
        "responses": {
          "200": {
            "description": "List of allocations for the specified job.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllocListStub"
              }
            },
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "Informs clients that payload will be in application/json form."
              },
              "X-Nomad-Index": {
                "type": "integer",
                "description": "Endpoints that support blocking queries return an HTTP header named set this unique identifier representing the current state of the requested resource. On a new Nomad cluster the value of this index starts at 1."
              },
              "X-Nomad-KnownLeader": {
                "type": "boolean",
                "description": "Flag indicating the agent that fulfilled the request had known Raft leader at the time of the operation."
              },
              "X-Nomad-LastContact": {
                "type": "integer",
                "description": "If AllowStale is used, this is time elapsed since last contact between the follower and leader. This can be used to gauge staleness."
              }
            }
          },
          "403": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/Forbidden"
            }
          },
          "405": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/MethodNotAllowed"
            }
          },
          "500": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/InternalServerError"
            }
          }
        }
      }
    },
    "/job/{jobName}/evaluate": {
      "put": {
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new evaluation for the given job. This can be used to force run the scheduling logic if necessary. See https://www.nomadproject.io/api-docs/jobs#create-job-evaluation.",
        "operationId": "evaluateJob",
        "parameters": [
          {
            "description": "The job to force an evaluation of.",
            "name": "jobEvaluateRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/JobEvaluateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/JobRegisterResponse"
            },
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "Informs clients that payload will be in application/json form."
              }
            }
          },
          "403": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/Forbidden"
            }
          },
          "405": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/MethodNotAllowed"
            }
          },
          "500": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/InternalServerError"
            }
          }
        }
      }
    },
    "/job/{jobName}/evaluations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "List evaluations for the specified job. See https://www.nomadproject.io/api-docs/evaluations#list-evaluations.",
        "operationId": "getJobEvaluations",
        "parameters": [
          {
            "$ref": "#/parameters/JobNameParam"
          },
          {
            "$ref": "#/parameters/RegionParam"
          },
          {
            "$ref": "#/parameters/StaleParam"
          },
          {
            "$ref": "#/parameters/PrefixParam"
          },
          {
            "$ref": "#/parameters/NamespaceParam"
          },
          {
            "$ref": "#/parameters/PerPageParam"
          },
          {
            "$ref": "#/parameters/NextTokenParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of job evaluations.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Evaluation"
              }
            },
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "Informs clients that payload will be in application/json form."
              },
              "X-Nomad-Index": {
                "type": "integer",
                "description": "Unique identifier representing the current state of the requested resource. On a new Nomad cluster the value of this index starts at 1."
              },
              "X-Nomad-KnownLeader": {
                "type": "boolean",
                "description": "Flag indicating the agent that fulfilled the request had a known Raft leader at the time of the operation."
              },
              "X-Nomad-LastContact": {
                "type": "integer",
                "description": "If AllowStale is used, this is time elapsed since last contact between the follower and leader. This can be used to gauge staleness."
              }
            }
          },
          "403": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/Forbidden"
            }
          },
          "405": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/MethodNotAllowed"
            }
          },
          "500": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/InternalServerError"
            }
          }
        }
      }
    },
    "/job/{jobName}/periodic/force": {
      "put": {
        "produces": [
          "application/json"
        ],
        "summary": "Forces the evaluation of a periodic job. See https://www.nomadproject.io/docs/commands/job/periodic-force.",
        "operationId": "putJobForceRequest",
        "parameters": [
          {
            "$ref": "#/parameters/JobNameParam"
          },
          {
            "$ref": "#/parameters/RegionParam"
          },
          {
            "$ref": "#/parameters/NamespaceParam"
          },
          {
            "$ref": "#/parameters/NomadTokenHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a type containing relevant write operation metadata.",
            "schema": {
              "$ref": "#/definitions/PeriodicForceResponse"
            },
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "Informs clients that payload will be in application/json form."
              },
              "X-Nomad-Index": {
                "type": "integer",
                "description": "Unique identifier representing the current state of the requested resource. On a new Nomad cluster the value of this index starts at 1."
              }
            }
          },
          "403": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/Forbidden"
            }
          },
          "405": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/MethodNotAllowed"
            }
          },
          "500": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/InternalServerError"
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "List all known jobs registered with Nomad. See https://www.nomadproject.io/api-docs/jobs#list-jobs.",
        "operationId": "getJobs",
        "parameters": [
          {
            "$ref": "#/parameters/RegionParam"
          },
          {
            "$ref": "#/parameters/StaleParam"
          },
          {
            "$ref": "#/parameters/PrefixParam"
          },
          {
            "$ref": "#/parameters/NamespaceParam"
          },
          {
            "$ref": "#/parameters/PerPageParam"
          },
          {
            "$ref": "#/parameters/NextTokenParam"
          }
        ],
        "responses": {
          "200": {
            "description": "List of jobs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobListStub"
              }
            },
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "Informs clients that payload will be in application/json form."
              },
              "X-Nomad-Index": {
                "type": "integer",
                "description": "Endpoints that support blocking queries return an HTTP header named set this unique identifier representing the current state of the requested resource. On a new Nomad cluster the value of this index starts at 1."
              },
              "X-Nomad-KnownLeader": {
                "type": "boolean",
                "description": "Flag indicating the agent that fulfilled the request had known Raft leader at the time of the operation."
              },
              "X-Nomad-LastContact": {
                "type": "integer",
                "description": "If AllowStale is used, this is time elapsed since last contact between the follower and leader. This can be used to gauge staleness."
              }
            }
          },
          "403": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/Forbidden"
            }
          },
          "500": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/InternalServerError"
            }
          }
        }
      }
    },
    "/jobs/parse": {
      "put": {
        "produces": [
          "application/json"
        ],
        "summary": "Parses a HCL jobspec and produce the equivalent JSON encoded job. See https://www.nomadproject.io/api-docs/jobs#parse-job.",
        "operationId": "parseJobSpec",
        "parameters": [
          {
            "description": "Container request that contains the HCL to parse.",
            "name": "JobParseRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/JobsParseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/Job"
            },
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "Informs clients that payload will be in application/json form."
              }
            }
          },
          "400": {
            "description": "(empty)"
          },
          "403": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/Forbidden"
            }
          },
          "405": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/MethodNotAllowed"
            }
          },
          "500": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/responses/InternalServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Affinity": {
      "description": "Affinity is used to serialize task group affinities",
      "type": "object",
      "properties": {
        "LTarget": {
          "type": "string"
        },
        "Operand": {
          "type": "string"
        },
        "RTarget": {
          "type": "string"
        },
        "Weight": {
          "type": "integer",
          "format": "int8"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocDeploymentStatus": {
      "description": "AllocDeploymentStatus captures the status of the allocation as part of the\ndeployment. This can include things like if the allocation has been marked as\nhealthy.",
      "type": "object",
      "properties": {
        "Canary": {
          "type": "boolean"
        },
        "Healthy": {
          "type": "boolean"
        },
        "ModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocatedCpuResources": {
      "type": "object",
      "properties": {
        "CpuShares": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocatedDeviceResource": {
      "type": "object",
      "properties": {
        "DeviceIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocatedMemoryResources": {
      "type": "object",
      "properties": {
        "MemoryMB": {
          "type": "integer",
          "format": "int64"
        },
        "MemoryMaxMB": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocatedResources": {
      "type": "object",
      "properties": {
        "Shared": {
          "$ref": "#/definitions/AllocatedSharedResources"
        },
        "Tasks": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AllocatedTaskResources"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocatedSharedResources": {
      "type": "object",
      "properties": {
        "DiskMB": {
          "type": "integer",
          "format": "int64"
        },
        "Networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkResource"
          }
        },
        "Ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortMapping"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocatedTaskResources": {
      "type": "object",
      "properties": {
        "Cpu": {
          "$ref": "#/definitions/AllocatedCpuResources"
        },
        "Devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllocatedDeviceResource"
          }
        },
        "Memory": {
          "$ref": "#/definitions/AllocatedMemoryResources"
        },
        "Networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkResource"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocationListStub": {
      "description": "AllocationListStub is used to return a subset of an allocation\nduring list operations.",
      "type": "object",
      "properties": {
        "AllocatedResources": {
          "$ref": "#/definitions/AllocatedResources"
        },
        "ClientDescription": {
          "type": "string"
        },
        "ClientStatus": {
          "type": "string"
        },
        "CreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "CreateTime": {
          "type": "integer",
          "format": "int64"
        },
        "DeploymentStatus": {
          "$ref": "#/definitions/AllocDeploymentStatus"
        },
        "DesiredDescription": {
          "type": "string"
        },
        "DesiredStatus": {
          "type": "string"
        },
        "EvalID": {
          "type": "string"
        },
        "FollowupEvalID": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "JobID": {
          "type": "string"
        },
        "JobType": {
          "type": "string"
        },
        "JobVersion": {
          "type": "integer",
          "format": "uint64"
        },
        "ModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "ModifyTime": {
          "type": "integer",
          "format": "int64"
        },
        "Name": {
          "type": "string"
        },
        "Namespace": {
          "type": "string"
        },
        "NodeID": {
          "type": "string"
        },
        "NodeName": {
          "type": "string"
        },
        "PreemptedAllocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PreemptedByAllocation": {
          "type": "string"
        },
        "RescheduleTracker": {
          "$ref": "#/definitions/RescheduleTracker"
        },
        "TaskGroup": {
          "type": "string"
        },
        "TaskStates": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TaskState"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "AllocationMetric": {
      "type": "object",
      "title": "AllocationMetric is used to deserialize allocation metrics.",
      "properties": {
        "AllocationTime": {
          "$ref": "#/definitions/Duration"
        },
        "ClassExhausted": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "ClassFiltered": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "CoalescedFailures": {
          "type": "integer",
          "format": "int64"
        },
        "ConstraintFiltered": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "DimensionExhausted": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "NodesAvailable": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "NodesEvaluated": {
          "type": "integer",
          "format": "int64"
        },
        "NodesExhausted": {
          "type": "integer",
          "format": "int64"
        },
        "NodesFiltered": {
          "type": "integer",
          "format": "int64"
        },
        "QuotaExhausted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ResourcesExhausted": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Resources"
          }
        },
        "ScoreMetaData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeScoreMeta"
          }
        },
        "Scores": {
          "description": "Deprecated, replaced with ScoreMetaData",
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "CSIMountOptions": {
      "description": "CSIMountOptions contain optional additional configuration that can be used\nwhen specifying that a Volume should be used with VolumeAccessTypeMount.",
      "type": "object",
      "properties": {
        "FSType": {
          "description": "FSType is an optional field that allows an operator to specify the type\nof the filesystem.",
          "type": "string"
        },
        "MountFlags": {
          "description": "MountFlags contains additional options that may be used when mounting the\nvolume by the plugin. This may contain sensitive data and should not be\nleaked.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "CSIPluginType": {
      "description": "CSIPluginType is an enum string that encapsulates the valid options for a\nCSIPlugin stanza's Type. These modes will allow the plugin to be used in\ndifferent ways by the client.",
      "type": "string",
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "CheckRestart": {
      "description": "CheckRestart describes if and when a task should be restarted based on\nfailing health checks.",
      "type": "object",
      "properties": {
        "Grace": {
          "$ref": "#/definitions/Duration"
        },
        "IgnoreWarnings": {
          "type": "boolean"
        },
        "Limit": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Constraint": {
      "type": "object",
      "title": "Constraint is used to serialize a job placement constraint.",
      "properties": {
        "LTarget": {
          "type": "string"
        },
        "Operand": {
          "type": "string"
        },
        "RTarget": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Consul": {
      "type": "object",
      "title": "Consul represents configuration related to consul.",
      "properties": {
        "Namespace": {
          "description": "(Enterprise-only) Namespace represents a Consul namespace.",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulConnect": {
      "type": "object",
      "title": "ConsulConnect represents a Consul Connect jobspec stanza.",
      "properties": {
        "Gateway": {
          "$ref": "#/definitions/ConsulGateway"
        },
        "Native": {
          "type": "boolean"
        },
        "SidecarService": {
          "$ref": "#/definitions/ConsulSidecarService"
        },
        "SidecarTask": {
          "$ref": "#/definitions/SidecarTask"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulExposeConfig": {
      "type": "object",
      "properties": {
        "Path": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsulExposePath"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulExposePath": {
      "type": "object",
      "properties": {
        "ListenerPort": {
          "type": "string"
        },
        "LocalPathPort": {
          "type": "integer",
          "format": "int64"
        },
        "Path": {
          "type": "string"
        },
        "Protocol": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulGateway": {
      "type": "object",
      "title": "ConsulGateway is used to configure one of the Consul Connect Gateway types.",
      "properties": {
        "Ingress": {
          "$ref": "#/definitions/ConsulIngressConfigEntry"
        },
        "Proxy": {
          "$ref": "#/definitions/ConsulGatewayProxy"
        },
        "Terminating": {
          "$ref": "#/definitions/ConsulTerminatingConfigEntry"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulGatewayBindAddress": {
      "type": "object",
      "properties": {
        "Address": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Port": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulGatewayProxy": {
      "description": "https://www.consul.io/docs/connect/proxies/envoy#gateway-options",
      "type": "object",
      "title": "ConsulGatewayProxy is used to tune parameters of the proxy instance acting as\none of the forms of Connect gateways that Consul supports.",
      "properties": {
        "Config": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "ConnectTimeout": {
          "$ref": "#/definitions/Duration"
        },
        "EnvoyDNSDiscoveryType": {
          "type": "string"
        },
        "EnvoyGatewayBindAddresses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConsulGatewayBindAddress"
          }
        },
        "EnvoyGatewayBindTaggedAddresses": {
          "type": "boolean"
        },
        "EnvoyGatewayNoDefaultBind": {
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulGatewayTLSConfig": {
      "type": "object",
      "title": "ConsulGatewayTLSConfig is used to configure TLS for a gateway.",
      "properties": {
        "Enabled": {
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulIngressConfigEntry": {
      "description": "https://www.consul.io/docs/agent/config-entries/ingress-gateway#available-fields",
      "type": "object",
      "title": "ConsulIngressConfigEntry represents the Consul Configuration Entry type for\nan Ingress Gateway.",
      "properties": {
        "Listeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsulIngressListener"
          }
        },
        "TLS": {
          "$ref": "#/definitions/ConsulGatewayTLSConfig"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulIngressListener": {
      "description": "ConsulIngressListener is used to configure a listener on a Consul Ingress\nGateway.",
      "type": "object",
      "properties": {
        "Port": {
          "type": "integer",
          "format": "int64"
        },
        "Protocol": {
          "type": "string"
        },
        "Services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsulIngressService"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulIngressService": {
      "type": "object",
      "title": "ConsulIngressService is used to configure a service fronted by the ingress gateway.",
      "properties": {
        "Hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Name": {
          "description": "Namespace is not yet supported.\nNamespace string",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulLinkedService": {
      "type": "object",
      "properties": {
        "CAFile": {
          "type": "string"
        },
        "CertFile": {
          "type": "string"
        },
        "KeyFile": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "SNI": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulProxy": {
      "type": "object",
      "title": "ConsulProxy represents a Consul Connect sidecar proxy jobspec stanza.",
      "properties": {
        "Config": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "ExposeConfig": {
          "$ref": "#/definitions/ConsulExposeConfig"
        },
        "LocalServiceAddress": {
          "type": "string"
        },
        "LocalServicePort": {
          "type": "integer",
          "format": "int64"
        },
        "Upstreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsulUpstream"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulSidecarService": {
      "description": "ConsulSidecarService represents a Consul Connect SidecarService jobspec\nstanza.",
      "type": "object",
      "properties": {
        "DisableDefaultTCPCheck": {
          "type": "boolean"
        },
        "Port": {
          "type": "string"
        },
        "Proxy": {
          "$ref": "#/definitions/ConsulProxy"
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulTerminatingConfigEntry": {
      "description": "https://www.consul.io/docs/agent/config-entries/terminating-gateway#available-fields",
      "type": "object",
      "title": "ConsulTerminatingConfigEntry represents the Consul Configuration Entry type\nfor a Terminating Gateway.",
      "properties": {
        "Services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsulLinkedService"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ConsulUpstream": {
      "type": "object",
      "title": "ConsulUpstream represents a Consul Connect upstream jobspec stanza.",
      "properties": {
        "Datacenter": {
          "type": "string"
        },
        "DestinationName": {
          "type": "string"
        },
        "LocalBindAddress": {
          "type": "string"
        },
        "LocalBindPort": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "DNSConfig": {
      "type": "object",
      "properties": {
        "Options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Searches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Servers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "DeregisterOptions": {
      "description": "DeregisterOptions is used to pass through job deregistration parameters",
      "type": "object",
      "properties": {
        "Global": {
          "description": "If Global is set to true, all regions of a multiregion job will be\nstopped.",
          "type": "boolean"
        },
        "Purge": {
          "description": "If Purge is set to true, the job is deregistered and purged from the\nsystem versus still being queryable and eventually GC'ed from the\nsystem. Most callers should not specify purge.",
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "DesiredUpdates": {
      "description": "DesiredUpdates contains the desired change set for a TaskGroup update operation",
      "type": "object",
      "properties": {
        "Canary": {
          "type": "integer",
          "format": "uint64"
        },
        "DestructiveUpdate": {
          "type": "integer",
          "format": "uint64"
        },
        "Ignore": {
          "type": "integer",
          "format": "uint64"
        },
        "InPlaceUpdate": {
          "type": "integer",
          "format": "uint64"
        },
        "Migrate": {
          "type": "integer",
          "format": "uint64"
        },
        "Place": {
          "type": "integer",
          "format": "uint64"
        },
        "Preemptions": {
          "type": "integer",
          "format": "uint64"
        },
        "Stop": {
          "type": "integer",
          "format": "uint64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "DispatchPayloadConfig": {
      "description": "DispatchPayloadConfig configures how a task gets its input from a job dispatch",
      "type": "object",
      "properties": {
        "File": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Duration": {
      "description": "A Duration represents the elapsed time between two instants\nas an int64 nanosecond count. The representation limits the\nlargest representable duration to approximately 290 years.",
      "type": "integer",
      "format": "int64",
      "x-go-package": "time"
    },
    "EphemeralDisk": {
      "description": "EphemeralDisk is an ephemeral disk object",
      "type": "object",
      "properties": {
        "Migrate": {
          "type": "boolean"
        },
        "SizeMB": {
          "type": "integer",
          "format": "int64"
        },
        "Sticky": {
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "EvalOptions": {
      "description": "EvalOptions is used to encapsulate options when forcing a job evaluation",
      "type": "object",
      "properties": {
        "ForceReschedule": {
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Evaluation": {
      "type": "object",
      "title": "Evaluation is used to serialize an evaluation.",
      "properties": {
        "AnnotatePlan": {
          "type": "boolean"
        },
        "BlockedEval": {
          "type": "string"
        },
        "ClassEligibility": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "CreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "CreateTime": {
          "type": "integer",
          "format": "int64"
        },
        "DeploymentID": {
          "type": "string"
        },
        "EscapedComputedClass": {
          "type": "boolean"
        },
        "FailedTGAllocs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AllocationMetric"
          }
        },
        "ID": {
          "type": "string"
        },
        "JobID": {
          "type": "string"
        },
        "JobModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "ModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "ModifyTime": {
          "type": "integer",
          "format": "int64"
        },
        "Namespace": {
          "type": "string"
        },
        "NextEval": {
          "type": "string"
        },
        "NodeID": {
          "type": "string"
        },
        "NodeModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "PreviousEval": {
          "type": "string"
        },
        "Priority": {
          "type": "integer",
          "format": "int64"
        },
        "QueuedAllocations": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "QuotaLimitReached": {
          "type": "string"
        },
        "SnapshotIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Status": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "TriggeredBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Wait": {
          "$ref": "#/definitions/Duration"
        },
        "WaitUntil": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "FieldDiff": {
      "description": "FieldDiff details the differences between to struct fields",
      "type": "object",
      "properties": {
        "Annotations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Name": {
          "type": "string"
        },
        "Old": {
          "type": "string",
          "x-go-name": "New"
        },
        "Type": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Job": {
      "type": "object",
      "title": "Job is used to serialize a job.",
      "properties": {
        "Affinities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Affinity"
          }
        },
        "AllAtOnce": {
          "type": "boolean"
        },
        "Constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Constraint"
          }
        },
        "ConsulNamespace": {
          "type": "string"
        },
        "ConsulToken": {
          "type": "string"
        },
        "CreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Datacenters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Dispatched": {
          "type": "boolean"
        },
        "ID": {
          "type": "string"
        },
        "JobModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Migrate": {
          "$ref": "#/definitions/MigrateStrategy"
        },
        "ModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Multiregion": {
          "$ref": "#/definitions/Multiregion"
        },
        "Name": {
          "type": "string"
        },
        "Namespace": {
          "type": "string"
        },
        "NomadTokenID": {
          "type": "string"
        },
        "ParameterizedJob": {
          "$ref": "#/definitions/ParameterizedJobConfig"
        },
        "ParentID": {
          "type": "string"
        },
        "Payload": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          }
        },
        "Periodic": {
          "$ref": "#/definitions/PeriodicConfig"
        },
        "Priority": {
          "type": "integer",
          "format": "int64"
        },
        "Region": {
          "type": "string"
        },
        "Reschedule": {
          "$ref": "#/definitions/ReschedulePolicy"
        },
        "Spreads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spread"
          }
        },
        "Stable": {
          "type": "boolean"
        },
        "Status": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Stop": {
          "type": "boolean"
        },
        "SubmitTime": {
          "type": "integer",
          "format": "int64"
        },
        "TaskGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskGroup"
          }
        },
        "Type": {
          "type": "string"
        },
        "Update": {
          "$ref": "#/definitions/UpdateStrategy"
        },
        "VaultNamespace": {
          "type": "string"
        },
        "VaultToken": {
          "type": "string"
        },
        "Version": {
          "type": "integer",
          "format": "uint64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobChildrenSummary": {
      "description": "JobChildrenSummary contains the summary of children job status",
      "type": "object",
      "properties": {
        "Dead": {
          "type": "integer",
          "format": "int64"
        },
        "Pending": {
          "type": "integer",
          "format": "int64"
        },
        "Running": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobDiff": {
      "description": "JobDiff details the differences between two Job specs",
      "type": "object",
      "properties": {
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDiff"
          }
        },
        "ID": {
          "type": "string"
        },
        "Objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectDiff"
          }
        },
        "TaskGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskGroupDiff"
          }
        },
        "Type": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobDispatchRequest": {
      "description": "JobDispatch request targets a Job for dispatch",
      "type": "object",
      "properties": {
        "JobID": {
          "type": "string"
        },
        "Meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Payload": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobEvaluateRequest": {
      "description": "JobEvaluateRequest is used when we just need to re-evaluate a target job",
      "type": "object",
      "properties": {
        "EvalOptions": {
          "$ref": "#/definitions/EvalOptions"
        },
        "JobID": {
          "type": "string"
        },
        "Namespace": {
          "description": "Namespace is the target namespace for this write",
          "type": "string"
        },
        "Region": {
          "description": "The target region for this write",
          "type": "string"
        },
        "SecretID": {
          "description": "SecretID is the secret ID of an ACL token",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobListStub": {
      "description": "JobListStub is used to return a subset of information about\njobs during list operations.",
      "type": "object",
      "properties": {
        "CreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Datacenters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ID": {
          "type": "string"
        },
        "JobModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "JobSummary": {
          "$ref": "#/definitions/JobSummary"
        },
        "ModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Name": {
          "type": "string"
        },
        "Namespace": {
          "type": "string"
        },
        "ParameterizedJob": {
          "type": "boolean"
        },
        "ParentID": {
          "type": "string"
        },
        "Periodic": {
          "type": "boolean"
        },
        "Priority": {
          "type": "integer",
          "format": "int64"
        },
        "Status": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Stop": {
          "type": "boolean"
        },
        "SubmitTime": {
          "type": "integer",
          "format": "int64"
        },
        "Type": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobPlanRequest": {
      "description": "JobPlanRequest is used to write a Job plan",
      "type": "object",
      "properties": {
        "Diff": {
          "type": "boolean"
        },
        "Job": {
          "$ref": "#/definitions/Job"
        },
        "Namespace": {
          "description": "Namespace is the target namespace for this write",
          "type": "string"
        },
        "PolicyOverride": {
          "type": "boolean"
        },
        "Region": {
          "description": "The target region for this write",
          "type": "string"
        },
        "SecretID": {
          "description": "SecretID is the secret ID of an ACL token",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobRegisterRequest": {
      "description": "JobRegisterRequest is used to update a job",
      "type": "object",
      "properties": {
        "EnforceIndex": {
          "description": "If EnforceIndex is set then the job will only be registered if the passed\nJobModifyIndex matches the current Jobs index. If the index is zero, the\nregister only occurs if the job is new.",
          "type": "boolean"
        },
        "Job": {
          "$ref": "#/definitions/Job"
        },
        "JobModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Namespace": {
          "description": "Namespace is the target namespace for this write",
          "type": "string"
        },
        "PolicyOverride": {
          "type": "boolean"
        },
        "PreserveCounts": {
          "type": "boolean"
        },
        "Region": {
          "description": "The target region for this write",
          "type": "string"
        },
        "SecretID": {
          "description": "SecretID is the secret ID of an ACL token",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobRevertRequest": {
      "type": "object",
      "title": "JobRevertRequest is used to revert a job to a prior version.",
      "properties": {
        "ConsulToken": {
          "description": "ConsulToken is the Consul token that proves the submitter of the job revert\nhas access to the Service Identity policies associated with the job's\nConsul Connect enabled services. This field is only used to transfer the\ntoken and is not stored after the Job revert.",
          "type": "string"
        },
        "EnforcePriorVersion": {
          "description": "EnforcePriorVersion if set will enforce that the job is at the given\nversion before reverting.",
          "type": "integer",
          "format": "uint64"
        },
        "JobID": {
          "description": "JobID is the ID of the job  being reverted",
          "type": "string"
        },
        "JobVersion": {
          "description": "JobVersion the version to revert to.",
          "type": "integer",
          "format": "uint64"
        },
        "Namespace": {
          "description": "Namespace is the target namespace for this write",
          "type": "string"
        },
        "Region": {
          "description": "The target region for this write",
          "type": "string"
        },
        "SecretID": {
          "description": "SecretID is the secret ID of an ACL token",
          "type": "string"
        },
        "VaultToken": {
          "description": "VaultToken is the Vault token that proves the submitter of the job revert\nhas access to any Vault policies specified in the targeted job version. This\nfield is only used to authorize the revert and is not stored after the Job\nrevert.",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobStabilityRequest": {
      "type": "object",
      "title": "JobStabilityRequest is used to marked a job as stable.",
      "properties": {
        "JobID": {
          "description": "Job to set the stability on",
          "type": "string"
        },
        "JobVersion": {
          "type": "integer",
          "format": "uint64"
        },
        "Namespace": {
          "description": "Namespace is the target namespace for this write",
          "type": "string"
        },
        "Region": {
          "description": "The target region for this write",
          "type": "string"
        },
        "SecretID": {
          "description": "SecretID is the secret ID of an ACL token",
          "type": "string"
        },
        "Stable": {
          "description": "Set the stability",
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobSummary": {
      "description": "JobSummary summarizes the state of the allocations of a job",
      "type": "object",
      "properties": {
        "Children": {
          "$ref": "#/definitions/JobChildrenSummary"
        },
        "CreateIndex": {
          "description": "Raft Indexes",
          "type": "integer",
          "format": "uint64"
        },
        "JobID": {
          "type": "string"
        },
        "ModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Namespace": {
          "type": "string"
        },
        "Summary": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TaskGroupSummary"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobValidateRequest": {
      "description": "JobValidateRequest is used to validate a job",
      "type": "object",
      "properties": {
        "Job": {
          "$ref": "#/definitions/Job"
        },
        "Namespace": {
          "description": "Namespace is the target namespace for this write",
          "type": "string"
        },
        "Region": {
          "description": "The target region for this write",
          "type": "string"
        },
        "SecretID": {
          "description": "SecretID is the secret ID of an ACL token",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "JobsParseRequest": {
      "description": "JobsParseRequest is used for arguments of the /v1/jobs/parse endpoint",
      "type": "object",
      "properties": {
        "Canonicalize": {
          "description": "Canonicalize is a flag as to if the server should return default values\nfor unset fields",
          "type": "boolean"
        },
        "JobHCL": {
          "description": "JobHCL is an hcl jobspec",
          "type": "string"
        },
        "hclv1": {
          "description": "HCLv1 indicates whether the JobHCL should be parsed with the hcl v1 parser",
          "type": "boolean",
          "x-go-name": "HCLv1"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "LogConfig": {
      "description": "LogConfig provides configuration for log rotation",
      "type": "object",
      "properties": {
        "MaxFileSizeMB": {
          "type": "integer",
          "format": "int64"
        },
        "MaxFiles": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "MigrateStrategy": {
      "description": "MigrateStrategy describes how allocations for a task group should be\nmigrated between nodes (eg when draining).",
      "type": "object",
      "properties": {
        "HealthCheck": {
          "type": "string"
        },
        "HealthyDeadline": {
          "$ref": "#/definitions/Duration"
        },
        "MaxParallel": {
          "type": "integer",
          "format": "int64"
        },
        "MinHealthyTime": {
          "$ref": "#/definitions/Duration"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Multiregion": {
      "type": "object",
      "properties": {
        "Regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiregionRegion"
          }
        },
        "Strategy": {
          "$ref": "#/definitions/MultiregionStrategy"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "MultiregionRegion": {
      "type": "object",
      "properties": {
        "Count": {
          "type": "integer",
          "format": "int64"
        },
        "Datacenters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Name": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "MultiregionStrategy": {
      "type": "object",
      "properties": {
        "MaxParallel": {
          "type": "integer",
          "format": "int64"
        },
        "OnFailure": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "NetworkResource": {
      "description": "NetworkResource is used to describe required network\nresources of a given task.",
      "type": "object",
      "properties": {
        "CIDR": {
          "type": "string"
        },
        "DNS": {
          "$ref": "#/definitions/DNSConfig"
        },
        "Device": {
          "type": "string"
        },
        "DynamicPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Port"
          }
        },
        "IP": {
          "type": "string"
        },
        "MBits": {
          "description": "COMPAT(0.13)\nXXX Deprecated. Please do not use. The field will be removed in Nomad\n0.13 and is only being kept to allow any references to be removed before\nthen.",
          "type": "integer",
          "format": "int64"
        },
        "Mode": {
          "type": "string"
        },
        "ReservedPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Port"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "NodeScoreMeta": {
      "description": "NodeScoreMeta is used to serialize node scoring metadata\ndisplayed in the CLI during verbose mode",
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "string"
        },
        "NormScore": {
          "type": "number",
          "format": "double"
        },
        "Scores": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ObjectDiff": {
      "description": "ObjectDiff details the differences between two objects",
      "type": "object",
      "properties": {
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDiff"
          }
        },
        "Name": {
          "type": "string"
        },
        "Objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectDiff"
          }
        },
        "Type": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ParameterizedJobConfig": {
      "type": "object",
      "title": "ParameterizedJobConfig is used to configure the parameterized job.",
      "properties": {
        "MetaOptional": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "MetaRequired": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Payload": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "PeriodicConfig": {
      "type": "object",
      "title": "PeriodicConfig is for serializing periodic config for a job.",
      "properties": {
        "Enabled": {
          "type": "boolean"
        },
        "ProhibitOverlap": {
          "type": "boolean"
        },
        "Spec": {
          "type": "string"
        },
        "SpecType": {
          "type": "string"
        },
        "TimeZone": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "PlanAnnotations": {
      "description": "PlanAnnotations contains annotation details for a JobResponse",
      "type": "object",
      "properties": {
        "DesiredTGUpdates": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DesiredUpdates"
          }
        },
        "PreemptedAllocs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllocationListStub"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "PlanOptions": {
      "description": "PlanOptions is used to pass through job planning parameters",
      "type": "object",
      "properties": {
        "Diff": {
          "type": "boolean"
        },
        "PolicyOverride": {
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Port": {
      "type": "object",
      "properties": {
        "HostNetwork": {
          "type": "string"
        },
        "Label": {
          "type": "string"
        },
        "To": {
          "type": "integer",
          "format": "int64"
        },
        "Value": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "PortMapping": {
      "type": "object",
      "properties": {
        "HostIP": {
          "type": "string"
        },
        "Label": {
          "type": "string"
        },
        "To": {
          "type": "integer",
          "format": "int64"
        },
        "Value": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "RegisterOptions": {
      "description": "RegisterOptions is used to pass through job registration parameters",
      "type": "object",
      "properties": {
        "EnforceIndex": {
          "type": "boolean"
        },
        "ModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "PolicyOverride": {
          "type": "boolean"
        },
        "PreserveCounts": {
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "RequestedDevice": {
      "type": "object",
      "title": "RequestedDevice is used to request a device for a task.",
      "properties": {
        "Affinities": {
          "description": "Affinities are a set of affinites to apply when selecting the device\nto use.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Affinity"
          }
        },
        "Constraints": {
          "description": "Constraints are a set of constraints to apply when selecting the device\nto use.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Constraint"
          }
        },
        "Count": {
          "description": "Count is the number of requested devices",
          "type": "integer",
          "format": "uint64"
        },
        "Name": {
          "description": "Name is the request name. The possible values are as follows:\n\u003ctype\u003e: A single value only specifies the type of request.\n\u003cvendor\u003e/\u003ctype\u003e: A single slash delimiter assumes the vendor and type of device is specified.\n\u003cvendor\u003e/\u003ctype\u003e/\u003cname\u003e: Two slash delimiters assume vendor, type and specific model are specified.\n\nExamples are as follows:\n\"gpu\"\n\"nvidia/gpu\"\n\"nvidia/gpu/GTX2080Ti\"",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "RescheduleEvent": {
      "description": "RescheduleEvent is used to keep track of previous attempts at rescheduling an allocation",
      "type": "object",
      "properties": {
        "PrevAllocID": {
          "description": "PrevAllocID is the ID of the previous allocation being restarted",
          "type": "string"
        },
        "PrevNodeID": {
          "description": "PrevNodeID is the node ID of the previous allocation",
          "type": "string"
        },
        "RescheduleTime": {
          "description": "RescheduleTime is the timestamp of a reschedule attempt",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ReschedulePolicy": {
      "type": "object",
      "title": "Reschedule configures how Tasks are rescheduled  when they crash or fail.",
      "properties": {
        "Attempts": {
          "description": "Attempts limits the number of rescheduling attempts that can occur in an interval.",
          "type": "integer",
          "format": "int64"
        },
        "Delay": {
          "$ref": "#/definitions/Duration"
        },
        "DelayFunction": {
          "description": "DelayFunction determines how the delay progressively changes on subsequent reschedule\nattempts. Valid values are \"exponential\", \"constant\", and \"fibonacci\".",
          "type": "string"
        },
        "Interval": {
          "$ref": "#/definitions/Duration"
        },
        "MaxDelay": {
          "$ref": "#/definitions/Duration"
        },
        "Unlimited": {
          "description": "Unlimited allows rescheduling attempts until they succeed",
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "RescheduleTracker": {
      "description": "RescheduleTracker encapsulates previous reschedule events",
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RescheduleEvent"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Resources": {
      "description": "Resources encapsulates the required resources of\na given task or task group.",
      "type": "object",
      "properties": {
        "CPU": {
          "type": "integer",
          "format": "int64"
        },
        "Cores": {
          "type": "integer",
          "format": "int64"
        },
        "Devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestedDevice"
          }
        },
        "DiskMB": {
          "type": "integer",
          "format": "int64"
        },
        "IOPS": {
          "description": "COMPAT(0.10)\nXXX Deprecated. Please do not use. The field will be removed in Nomad\n0.10 and is only being kept to allow any references to be removed before\nthen.",
          "type": "integer",
          "format": "int64"
        },
        "MemoryMB": {
          "type": "integer",
          "format": "int64"
        },
        "MemoryMaxMB": {
          "type": "integer",
          "format": "int64"
        },
        "Networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkResource"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "RestartPolicy": {
      "description": "RestartPolicy defines how the Nomad client restarts\ntasks in a taskgroup when they fail",
      "type": "object",
      "properties": {
        "Attempts": {
          "type": "integer",
          "format": "int64"
        },
        "Delay": {
          "$ref": "#/definitions/Duration"
        },
        "Interval": {
          "$ref": "#/definitions/Duration"
        },
        "Mode": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ScalingPolicy": {
      "description": "ScalingPolicy is the user-specified API object for an autoscaling policy",
      "type": "object",
      "properties": {
        "CreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Enabled": {
          "type": "boolean"
        },
        "ID": {
          "type": "string"
        },
        "Max": {
          "type": "integer",
          "format": "int64"
        },
        "Min": {
          "type": "integer",
          "format": "int64"
        },
        "ModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "Namespace": {
          "type": "string"
        },
        "Policy": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "Target": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Type": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Service": {
      "type": "object",
      "title": "Service represents a Consul service definition.",
      "properties": {
        "AddressMode": {
          "type": "string"
        },
        "CanaryMeta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "CanaryTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CheckRestart": {
          "$ref": "#/definitions/CheckRestart"
        },
        "Checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCheck"
          }
        },
        "Connect": {
          "$ref": "#/definitions/ConsulConnect"
        },
        "EnableTagOverride": {
          "type": "boolean"
        },
        "Id": {
          "description": "FIXME Id is unused. Remove?",
          "type": "string"
        },
        "Meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Name": {
          "type": "string"
        },
        "OnUpdate": {
          "type": "string"
        },
        "PortLabel": {
          "type": "string"
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TaskName": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "ServiceCheck": {
      "type": "object",
      "title": "ServiceCheck represents the consul health check that Nomad registers.",
      "properties": {
        "AddressMode": {
          "type": "string"
        },
        "Args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Body": {
          "type": "string"
        },
        "CheckRestart": {
          "$ref": "#/definitions/CheckRestart"
        },
        "Command": {
          "type": "string"
        },
        "Expose": {
          "type": "boolean"
        },
        "FailuresBeforeCritical": {
          "type": "integer",
          "format": "int64"
        },
        "GRPCService": {
          "type": "string"
        },
        "GRPCUseTLS": {
          "type": "boolean"
        },
        "Header": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "Id": {
          "description": "FIXME Id is unused. Remove?",
          "type": "string"
        },
        "InitialStatus": {
          "type": "string"
        },
        "Interval": {
          "$ref": "#/definitions/Duration"
        },
        "Method": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "OnUpdate": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "PortLabel": {
          "type": "string"
        },
        "Protocol": {
          "type": "string"
        },
        "SuccessBeforePassing": {
          "type": "integer",
          "format": "int64"
        },
        "TLSSkipVerify": {
          "type": "boolean"
        },
        "TaskName": {
          "type": "string"
        },
        "Timeout": {
          "$ref": "#/definitions/Duration"
        },
        "Type": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "SidecarTask": {
      "description": "SidecarTask represents a subset of Task fields that can be set to override\nthe fields of the Task generated for the sidecar",
      "type": "object",
      "properties": {
        "Config": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "Driver": {
          "type": "string"
        },
        "Env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "KillSignal": {
          "type": "string"
        },
        "KillTimeout": {
          "$ref": "#/definitions/Duration"
        },
        "LogConfig": {
          "$ref": "#/definitions/LogConfig"
        },
        "Meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Name": {
          "type": "string"
        },
        "Resources": {
          "$ref": "#/definitions/Resources"
        },
        "ShutdownDelay": {
          "$ref": "#/definitions/Duration"
        },
        "User": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Spread": {
      "description": "Spread is used to serialize task group allocation spread preferences",
      "type": "object",
      "properties": {
        "Attribute": {
          "type": "string"
        },
        "SpreadTarget": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpreadTarget"
          }
        },
        "Weight": {
          "type": "integer",
          "format": "int8"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "SpreadTarget": {
      "description": "SpreadTarget is used to serialize target allocation spread percentages",
      "type": "object",
      "properties": {
        "Percent": {
          "type": "integer",
          "format": "uint8"
        },
        "Value": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Task": {
      "type": "object",
      "title": "Task is a single process in a task group.",
      "properties": {
        "Affinities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Affinity"
          }
        },
        "Artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskArtifact"
          }
        },
        "CSIPluginConfig": {
          "$ref": "#/definitions/TaskCSIPluginConfig"
        },
        "Config": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "Constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Constraint"
          }
        },
        "DispatchPayload": {
          "$ref": "#/definitions/DispatchPayloadConfig"
        },
        "Driver": {
          "type": "string"
        },
        "Env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "KillSignal": {
          "type": "string"
        },
        "KillTimeout": {
          "$ref": "#/definitions/Duration"
        },
        "Kind": {
          "type": "string"
        },
        "Leader": {
          "type": "boolean"
        },
        "Lifecycle": {
          "$ref": "#/definitions/TaskLifecycle"
        },
        "LogConfig": {
          "$ref": "#/definitions/LogConfig"
        },
        "Meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Name": {
          "type": "string"
        },
        "Resources": {
          "$ref": "#/definitions/Resources"
        },
        "RestartPolicy": {
          "$ref": "#/definitions/RestartPolicy"
        },
        "ScalingPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScalingPolicy"
          }
        },
        "Services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "ShutdownDelay": {
          "$ref": "#/definitions/Duration"
        },
        "Templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Template"
          }
        },
        "User": {
          "type": "string"
        },
        "Vault": {
          "$ref": "#/definitions/Vault"
        },
        "VolumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskArtifact": {
      "type": "object",
      "title": "TaskArtifact is used to download artifacts before running a task.",
      "properties": {
        "GetterHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "GetterMode": {
          "type": "string"
        },
        "GetterOptions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "GetterSource": {
          "type": "string"
        },
        "RelativeDest": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskCSIPluginConfig": {
      "description": "TaskCSIPluginConfig contains the data that is required to setup a task as a\nCSI plugin. This will be used by the csi_plugin_supervisor_hook to configure\nmounts for the plugin and initiate the connection to the plugin catalog.",
      "type": "object",
      "properties": {
        "ID": {
          "description": "ID is the identifier of the plugin.\nIdeally this should be the FQDN of the plugin.",
          "type": "string"
        },
        "MountDir": {
          "description": "MountDir is the destination that nomad should mount in its CSI\ndirectory for the plugin. It will then expect a file called CSISocketName\nto be created by the plugin, and will provide references into\n\"MountDir/CSIIntermediaryDirname/VolumeName/AllocID for mounts.\n\nDefault is /csi.",
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/CSIPluginType"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskDiff": {
      "description": "TaskDiff details the differences between two Task specs",
      "type": "object",
      "properties": {
        "Annotations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDiff"
          }
        },
        "Name": {
          "type": "string"
        },
        "Objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectDiff"
          }
        },
        "Type": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskEvent": {
      "description": "TaskEvent is an event that effects the state of a task and contains meta-data\nappropriate to the events type.",
      "type": "object",
      "properties": {
        "Details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "DiskLimit": {
          "type": "integer",
          "format": "int64"
        },
        "DiskSize": {
          "type": "integer",
          "format": "int64"
        },
        "DisplayMessage": {
          "type": "string"
        },
        "DownloadError": {
          "type": "string"
        },
        "DriverError": {
          "type": "string"
        },
        "DriverMessage": {
          "type": "string"
        },
        "ExitCode": {
          "type": "integer",
          "format": "int64"
        },
        "FailedSibling": {
          "type": "string"
        },
        "FailsTask": {
          "description": "DEPRECATION NOTICE: The following fields are all deprecated. see TaskEvent struct in structs.go for details.",
          "type": "boolean"
        },
        "GenericSource": {
          "type": "string"
        },
        "KillError": {
          "type": "string"
        },
        "KillReason": {
          "type": "string"
        },
        "KillTimeout": {
          "$ref": "#/definitions/Duration"
        },
        "Message": {
          "type": "string"
        },
        "RestartReason": {
          "type": "string"
        },
        "SetupError": {
          "type": "string"
        },
        "Signal": {
          "type": "integer",
          "format": "int64"
        },
        "StartDelay": {
          "type": "integer",
          "format": "int64"
        },
        "TaskSignal": {
          "type": "string"
        },
        "TaskSignalReason": {
          "type": "string"
        },
        "Time": {
          "type": "integer",
          "format": "int64"
        },
        "Type": {
          "type": "string"
        },
        "ValidationError": {
          "type": "string"
        },
        "VaultError": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskGroup": {
      "type": "object",
      "title": "TaskGroup is the unit of scheduling.",
      "properties": {
        "Affinities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Affinity"
          }
        },
        "Constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Constraint"
          }
        },
        "Consul": {
          "$ref": "#/definitions/Consul"
        },
        "Count": {
          "type": "integer",
          "format": "int64"
        },
        "EphemeralDisk": {
          "$ref": "#/definitions/EphemeralDisk"
        },
        "Meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Migrate": {
          "$ref": "#/definitions/MigrateStrategy"
        },
        "Name": {
          "type": "string"
        },
        "Networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkResource"
          }
        },
        "ReschedulePolicy": {
          "$ref": "#/definitions/ReschedulePolicy"
        },
        "RestartPolicy": {
          "$ref": "#/definitions/RestartPolicy"
        },
        "Scaling": {
          "$ref": "#/definitions/ScalingPolicy"
        },
        "Services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "ShutdownDelay": {
          "$ref": "#/definitions/Duration"
        },
        "Spreads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spread"
          }
        },
        "StopAfterClientDisconnect": {
          "$ref": "#/definitions/Duration"
        },
        "Tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "Update": {
          "$ref": "#/definitions/UpdateStrategy"
        },
        "Volumes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VolumeRequest"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskGroupDiff": {
      "description": "TaskGroupDiff details the differences between two TaskGroup specs",
      "type": "object",
      "properties": {
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDiff"
          }
        },
        "Name": {
          "type": "string"
        },
        "Objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectDiff"
          }
        },
        "Tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskDiff"
          }
        },
        "Type": {
          "type": "string"
        },
        "Updates": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "uint64"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskGroupSummary": {
      "description": "TaskGroup summarizes the state of all the allocations of a particular\nTaskGroup",
      "type": "object",
      "properties": {
        "Complete": {
          "type": "integer",
          "format": "int64"
        },
        "Failed": {
          "type": "integer",
          "format": "int64"
        },
        "Lost": {
          "type": "integer",
          "format": "int64"
        },
        "Queued": {
          "type": "integer",
          "format": "int64"
        },
        "Running": {
          "type": "integer",
          "format": "int64"
        },
        "Starting": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskHandle": {
      "description": "Experimental - TaskHandle is based on drivers.TaskHandle and used by remote\ntask drivers to migrate task handles between allocations.",
      "type": "object",
      "properties": {
        "DriverState": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          }
        },
        "Version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskLifecycle": {
      "type": "object",
      "properties": {
        "Hook": {
          "type": "string"
        },
        "Sidecar": {
          "type": "boolean"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "TaskState": {
      "description": "TaskState tracks the current state of a task and events that caused state\ntransitions.",
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskEvent"
          }
        },
        "Failed": {
          "type": "boolean"
        },
        "FinishedAt": {
          "type": "string",
          "format": "date-time"
        },
        "LastRestart": {
          "type": "string",
          "format": "date-time"
        },
        "Restarts": {
          "type": "integer",
          "format": "uint64"
        },
        "StartedAt": {
          "type": "string",
          "format": "date-time"
        },
        "State": {
          "type": "string"
        },
        "TaskHandle": {
          "$ref": "#/definitions/TaskHandle"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Template": {
      "type": "object",
      "properties": {
        "ChangeMode": {
          "type": "string"
        },
        "ChangeSignal": {
          "type": "string"
        },
        "DestPath": {
          "type": "string"
        },
        "EmbeddedTmpl": {
          "type": "string"
        },
        "Envvars": {
          "type": "boolean"
        },
        "LeftDelim": {
          "type": "string"
        },
        "Perms": {
          "type": "string"
        },
        "RightDelim": {
          "type": "string"
        },
        "SourcePath": {
          "type": "string"
        },
        "Splay": {
          "$ref": "#/definitions/Duration"
        },
        "VaultGrace": {
          "$ref": "#/definitions/Duration"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "UpdateStrategy": {
      "type": "object",
      "title": "UpdateStrategy defines a task groups update strategy.",
      "properties": {
        "AutoPromote": {
          "type": "boolean"
        },
        "AutoRevert": {
          "type": "boolean"
        },
        "Canary": {
          "type": "integer",
          "format": "int64"
        },
        "HealthCheck": {
          "type": "string"
        },
        "HealthyDeadline": {
          "$ref": "#/definitions/Duration"
        },
        "MaxParallel": {
          "type": "integer",
          "format": "int64"
        },
        "MinHealthyTime": {
          "$ref": "#/definitions/Duration"
        },
        "ProgressDeadline": {
          "$ref": "#/definitions/Duration"
        },
        "Stagger": {
          "$ref": "#/definitions/Duration"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "Vault": {
      "type": "object",
      "properties": {
        "ChangeMode": {
          "type": "string"
        },
        "ChangeSignal": {
          "type": "string"
        },
        "Env": {
          "type": "boolean"
        },
        "Namespace": {
          "type": "string"
        },
        "Policies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "VolumeMount": {
      "description": "VolumeMount represents the relationship between a destination path in a task\nand the task group volume that should be mounted there.",
      "type": "object",
      "properties": {
        "Destination": {
          "type": "string"
        },
        "PropagationMode": {
          "type": "string"
        },
        "ReadOnly": {
          "type": "boolean"
        },
        "Volume": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "VolumeRequest": {
      "type": "object",
      "title": "VolumeRequest is a representation of a storage volume that a TaskGroup wishes to use.",
      "properties": {
        "AccessMode": {
          "type": "string"
        },
        "AttachmentMode": {
          "type": "string"
        },
        "MountOptions": {
          "$ref": "#/definitions/CSIMountOptions"
        },
        "Name": {
          "type": "string"
        },
        "PerAlloc": {
          "type": "boolean"
        },
        "ReadOnly": {
          "type": "boolean"
        },
        "Source": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    },
    "WriteRequest": {
      "description": "WriteRequest is used to scope and authorize a write operation",
      "type": "object",
      "properties": {
        "Namespace": {
          "description": "Namespace is the target namespace for this write",
          "type": "string"
        },
        "Region": {
          "description": "The target region for this write",
          "type": "string"
        },
        "SecretID": {
          "description": "SecretID is the secret ID of an ACL token",
          "type": "string"
        }
      },
      "x-go-package": "github.com/hashicorp/nomad/api"
    }
  },
  "parameters": {
    "AllParam": {
      "type": "int32",
      "description": "Flag indicating whether to constrain by job creation index or not.",
      "name": "all",
      "in": "query"
    },
    "IndexParam": {
      "type": "int32",
      "description": "If set, wait until query exceeds given index. Must be provided with WaitParam.",
      "name": "index",
      "in": "query"
    },
    "JobNameParam": {
      "type": "string",
      "description": "The job identifier.",
      "name": "jobName",
      "in": "path",
      "required": true
    },
    "NamespaceParam": {
      "type": "string",
      "description": "Filters results based on the specified namespace",
      "name": "namespace",
      "in": "query"
    },
    "NextTokenParam": {
      "type": "string",
      "description": "Indicates where to start paging for queries that support pagination",
      "name": "next_token",
      "in": "query"
    },
    "NomadTokenHeader": {
      "type": "string",
      "description": "A Nomad ACL token",
      "name": "X-Nomad-Token",
      "in": "header"
    },
    "PerPageParam": {
      "type": "integer",
      "format": "int32",
      "description": "Maximum number of results to return",
      "name": "per_page",
      "in": "query"
    },
    "PrefixParam": {
      "type": "string",
      "description": "Constrains results to jobs that start with the defined prefix",
      "name": "prefix",
      "in": "query"
    },
    "RegionParam": {
      "type": "string",
      "description": "Filters results based on the specified region",
      "name": "region",
      "in": "query"
    },
    "StaleParam": {
      "type": "string",
      "description": "If present, results will include stale reads",
      "name": "stale",
      "in": "query"
    },
    "WaitParam": {
      "type": "int32",
      "description": "Provided with IndexParam to wait for change",
      "name": "wait",
      "in": "query"
    }
  },
  "responses": {
    "Forbidden": {
      "description": "Forbidden"
    },
    "InternalServerError": {
      "description": "Internal server error"
    },
    "JobDeregisterResponse": {
      "description": "JobDeregisterResponse is used to respond to a job de-registration",
      "schema": {
        "$ref": "#/definitions/Duration"
      },
      "headers": {
        "EvalCreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "EvalID": {
          "type": "string"
        },
        "JobModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "KnownLeader": {
          "type": "boolean",
          "description": "Is there a known leader"
        },
        "LastContact": {
          "description": "Time of last contact from the leader for the\nserver servicing the request"
        },
        "LastIndex": {
          "type": "integer",
          "format": "uint64",
          "description": "LastIndex. This can be used as a WaitIndex to perform\na blocking query"
        },
        "RequestTime": {
          "description": "How long did the request take"
        }
      }
    },
    "JobDispatchResponse": {
      "description": "JobDispatchResponse contains the result of JobDispatchRequest",
      "schema": {
        "$ref": "#/definitions/Duration"
      },
      "headers": {
        "DispatchedJobID": {
          "type": "string"
        },
        "EvalCreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "EvalID": {
          "type": "string"
        },
        "JobCreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "LastIndex": {
          "type": "integer",
          "format": "uint64",
          "description": "LastIndex. This can be used as a WaitIndex to perform\na blocking query"
        },
        "RequestTime": {
          "description": "How long did the request take"
        }
      }
    },
    "JobPlanResponse": {
      "description": "JobPlanResponse details the results of a Job plan write operation",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/AllocationMetric"
        },
        "$ref": "#/definitions/PlanAnnotations"
      },
      "headers": {
        "Annotations": {},
        "CreatedEvals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Evaluation"
          }
        },
        "Diff": {},
        "FailedTGAllocs": {},
        "JobModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "NextPeriodicLaunch": {
          "type": "string",
          "format": "date-time"
        },
        "Warnings": {
          "type": "string",
          "description": "Warnings contains any warnings about the given job. These may include\ndeprecation warnings."
        }
      }
    },
    "JobRegisterResponse": {
      "description": "JobRegisterResponse is used to respond to a job registration",
      "schema": {
        "$ref": "#/definitions/Duration"
      },
      "headers": {
        "EvalCreateIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "EvalID": {
          "type": "string"
        },
        "JobModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "KnownLeader": {
          "type": "boolean",
          "description": "Is there a known leader"
        },
        "LastContact": {
          "description": "Time of last contact from the leader for the\nserver servicing the request"
        },
        "LastIndex": {
          "type": "integer",
          "format": "uint64",
          "description": "LastIndex. This can be used as a WaitIndex to perform\na blocking query"
        },
        "RequestTime": {
          "description": "How long did the request take"
        },
        "Warnings": {
          "type": "string",
          "description": "Warnings contains any warnings about the given job. These may include\ndeprecation warnings."
        }
      }
    },
    "JobStabilityResponse": {
      "description": "JobStabilityResponse is the response when marking a job as stable.",
      "schema": {
        "$ref": "#/definitions/Duration"
      },
      "headers": {
        "JobModifyIndex": {
          "type": "integer",
          "format": "uint64"
        },
        "LastIndex": {
          "type": "integer",
          "format": "uint64",
          "description": "LastIndex. This can be used as a WaitIndex to perform\na blocking query"
        },
        "RequestTime": {
          "description": "How long did the request take"
        }
      }
    },
    "JobValidateResponse": {
      "description": "JobValidateResponse is the response from validate request",
      "headers": {
        "DriverConfigValidated": {
          "type": "boolean",
          "description": "DriverConfigValidated indicates whether the agent validated the driver\nconfig"
        },
        "Error": {
          "type": "string",
          "description": "Error is a string version of any error that may have occurred"
        },
        "ValidationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ValidationErrors is a list of validation errors"
        },
        "Warnings": {
          "type": "string",
          "description": "Warnings contains any warnings about the given job. These may include\ndeprecation warnings."
        }
      }
    },
    "JobVersionsResponse": {
      "description": "JobVersionsResponse is used for a job get versions request",
      "schema": {
        "$ref": "#/definitions/Duration"
      },
      "headers": {
        "Diffs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobDiff"
          }
        },
        "KnownLeader": {
          "type": "boolean",
          "description": "Is there a known leader"
        },
        "LastContact": {
          "description": "Time of last contact from the leader for the\nserver servicing the request"
        },
        "LastIndex": {
          "type": "integer",
          "format": "uint64",
          "description": "LastIndex. This can be used as a WaitIndex to perform\na blocking query"
        },
        "RequestTime": {
          "description": "How long did the request take"
        },
        "Versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        }
      }
    },
    "MethodNotAllowed": {
      "description": "Method not allowed"
    },
    "NotFound": {
      "description": "Not found"
    },
    "periodicForceResponse": {
      "description": "periodicForceResponse is used to deserialize a force response",
      "headers": {
        "EvalID": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "description": "ACL tokens to operate. The token are used to authenticate the request and determine if the request is allowed based on the associated authorizations. Tokens are specified per-request by using the `X-Nomad-Token` request header set to the `SecretID` of an ACL Token.",
      "type": "apiKey",
      "name": "X-Nomad-Token",
      "in": "header"
    }
  }
}