name: build

on:
  push:
    branches:
      - main
      - release/**
  workflow_dispatch:
    inputs:
      build-ref:
        description: 'The git ref to build from'
        type: string
        default: ''
        required: false
      make-prerelease:
        description: "Run prerelease to generate files"
        type: "boolean"
        required: false
        default: true

env:
  PKG_NAME: "nomad"
  GO_TAGS: "release"

jobs:
  get-go-version:
    runs-on: ubuntu-20.04
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.build-ref }}
      - name: Determine Go version
        id: get-go-version
        # We use .go-version as our source of truth for current Go
        # version, because "goenv" can react to it automatically.
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "go-version=$(cat .go-version)" >> $GITHUB_OUTPUT
  get-product-version:
    runs-on: ubuntu-20.04
    outputs:
      product-version: ${{ steps.get-product-version.outputs.product-version }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.build-ref }}
      - name: get product version
        id: get-product-version
        run: |
          make version
          echo "product-version=$(make version)" >> $GITHUB_OUTPUT
  generate-metadata-file:
    needs: get-product-version
    runs-on: ubuntu-20.04
    outputs:
      filepath: ${{ steps.generate-metadata-file.outputs.filepath }}
    steps:
      - name: "Checkout directory"
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.build-ref }}
      - name: Generate metadata file
        id: generate-metadata-file
        uses: hashicorp/actions-generate-metadata@v1.0.1
        with:
          version: ${{ needs.get-product-version.outputs.product-version }}
          product: ${{ env.PKG_NAME }}
          repositoryOwner: "hashicorp"
          sha: ${{ github.event.inputs.build-ref }}
      - uses: actions/upload-artifact@v2
        with:
          name: metadata.json
          path: ${{ steps.generate-metadata-file.outputs.filepath }}

  build-other:
    needs: [get-go-version, get-product-version]
    runs-on: [ custom, linux, xxl, 20.04 ]
    strategy:
      matrix:
        goos: [windows]
        goarch: ["386", "amd64"]
      fail-fast: true
    uses: ./.github/workflows/build-nomad-oss.yml
    with:
      create-packages: false
      goarch: ${{ matrix.goarch }}
      goos: ${{ matrix.goos }}
      cgo-enabled: 1
      go-tags: release
      go-version: ${{ needs.product-metadata.outputs.go-version }}
      package-name: ${{ needs.product-metadata.outputs.package-name }}
      nomad-version: ${{ needs.product-metadata.outputs.nomad-version }}
    secrets: inherit

  build-linux:
    needs: [get-go-version, get-product-version]
    runs-on: [ custom, linux, xxl, 20.04 ]
    strategy:
      matrix:
        goos: [linux]
        goarch: [arm, arm64, 386, amd64]
      fail-fast: true

    uses: ./.github/workflows/build-nomad-oss.yml
    with:
      goarch: ${{ matrix.goarch }}
      goos: ${{ matrix.goos }}
      go-tags: release
      cgo-enabled: 1
      go-version: ${{ needs.product-metadata.outputs.go-version }}
      package-name: ${{ needs.product-metadata.outputs.package-name }}
      nomad-version: ${{ needs.product-metadata.outputs.nomad-version }}
    secrets: inherit

  build-darwin:
      name: Build Nomad Darwin
      needs: product-metadata
      strategy:
        matrix:
          goos: [darwin]
          goarch: [arm64, amd64]
        fail-fast: true
      uses: ./.github/workflows/build-nomad-oss.yml
      with:
        create-packages: false
        goarch: ${{ matrix.goarch }}
        goos: ${{ matrix.goos }}
        go-tags: release netcgo
        cgo-enabled: 1
        go-version: ${{ needs.product-metadata.outputs.go-version }}
        package-name: ${{ needs.product-metadata.outputs.package-name }}
        nomad-version: ${{ needs.product-metadata.outputs.nomad-version }}
      secrets: inherit
