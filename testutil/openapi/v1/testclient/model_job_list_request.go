/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// JobListRequest struct for JobListRequest
type JobListRequest struct {
	AllowStale    *bool   `json:"AllowStale,omitempty"`
	AuthToken     *string `json:"AuthToken,omitempty"`
	Forwarded     *bool   `json:"Forwarded,omitempty"`
	MaxQueryTime  *int64  `json:"MaxQueryTime,omitempty"`
	MinQueryIndex *int32  `json:"MinQueryIndex,omitempty"`
	Namespace     *string `json:"Namespace,omitempty"`
	NextToken     *string `json:"NextToken,omitempty"`
	PerPage       *int32  `json:"PerPage,omitempty"`
	Prefix        *string `json:"Prefix,omitempty"`
	Region        *string `json:"Region,omitempty"`
}

// NewJobListRequest instantiates a new JobListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobListRequest() *JobListRequest {
	this := JobListRequest{}
	return &this
}

// NewJobListRequestWithDefaults instantiates a new JobListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobListRequestWithDefaults() *JobListRequest {
	this := JobListRequest{}
	return &this
}

// GetAllowStale returns the AllowStale field value if set, zero value otherwise.
func (o *JobListRequest) GetAllowStale() bool {
	if o == nil || o.AllowStale == nil {
		var ret bool
		return ret
	}
	return *o.AllowStale
}

// GetAllowStaleOk returns a tuple with the AllowStale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetAllowStaleOk() (*bool, bool) {
	if o == nil || o.AllowStale == nil {
		return nil, false
	}
	return o.AllowStale, true
}

// HasAllowStale returns a boolean if a field has been set.
func (o *JobListRequest) HasAllowStale() bool {
	if o != nil && o.AllowStale != nil {
		return true
	}

	return false
}

// SetAllowStale gets a reference to the given bool and assigns it to the AllowStale field.
func (o *JobListRequest) SetAllowStale(v bool) {
	o.AllowStale = &v
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise.
func (o *JobListRequest) GetAuthToken() string {
	if o == nil || o.AuthToken == nil {
		var ret string
		return ret
	}
	return *o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetAuthTokenOk() (*string, bool) {
	if o == nil || o.AuthToken == nil {
		return nil, false
	}
	return o.AuthToken, true
}

// HasAuthToken returns a boolean if a field has been set.
func (o *JobListRequest) HasAuthToken() bool {
	if o != nil && o.AuthToken != nil {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given string and assigns it to the AuthToken field.
func (o *JobListRequest) SetAuthToken(v string) {
	o.AuthToken = &v
}

// GetForwarded returns the Forwarded field value if set, zero value otherwise.
func (o *JobListRequest) GetForwarded() bool {
	if o == nil || o.Forwarded == nil {
		var ret bool
		return ret
	}
	return *o.Forwarded
}

// GetForwardedOk returns a tuple with the Forwarded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetForwardedOk() (*bool, bool) {
	if o == nil || o.Forwarded == nil {
		return nil, false
	}
	return o.Forwarded, true
}

// HasForwarded returns a boolean if a field has been set.
func (o *JobListRequest) HasForwarded() bool {
	if o != nil && o.Forwarded != nil {
		return true
	}

	return false
}

// SetForwarded gets a reference to the given bool and assigns it to the Forwarded field.
func (o *JobListRequest) SetForwarded(v bool) {
	o.Forwarded = &v
}

// GetMaxQueryTime returns the MaxQueryTime field value if set, zero value otherwise.
func (o *JobListRequest) GetMaxQueryTime() int64 {
	if o == nil || o.MaxQueryTime == nil {
		var ret int64
		return ret
	}
	return *o.MaxQueryTime
}

// GetMaxQueryTimeOk returns a tuple with the MaxQueryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetMaxQueryTimeOk() (*int64, bool) {
	if o == nil || o.MaxQueryTime == nil {
		return nil, false
	}
	return o.MaxQueryTime, true
}

// HasMaxQueryTime returns a boolean if a field has been set.
func (o *JobListRequest) HasMaxQueryTime() bool {
	if o != nil && o.MaxQueryTime != nil {
		return true
	}

	return false
}

// SetMaxQueryTime gets a reference to the given int64 and assigns it to the MaxQueryTime field.
func (o *JobListRequest) SetMaxQueryTime(v int64) {
	o.MaxQueryTime = &v
}

// GetMinQueryIndex returns the MinQueryIndex field value if set, zero value otherwise.
func (o *JobListRequest) GetMinQueryIndex() int32 {
	if o == nil || o.MinQueryIndex == nil {
		var ret int32
		return ret
	}
	return *o.MinQueryIndex
}

// GetMinQueryIndexOk returns a tuple with the MinQueryIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetMinQueryIndexOk() (*int32, bool) {
	if o == nil || o.MinQueryIndex == nil {
		return nil, false
	}
	return o.MinQueryIndex, true
}

// HasMinQueryIndex returns a boolean if a field has been set.
func (o *JobListRequest) HasMinQueryIndex() bool {
	if o != nil && o.MinQueryIndex != nil {
		return true
	}

	return false
}

// SetMinQueryIndex gets a reference to the given int32 and assigns it to the MinQueryIndex field.
func (o *JobListRequest) SetMinQueryIndex(v int32) {
	o.MinQueryIndex = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *JobListRequest) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *JobListRequest) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *JobListRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *JobListRequest) GetNextToken() string {
	if o == nil || o.NextToken == nil {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetNextTokenOk() (*string, bool) {
	if o == nil || o.NextToken == nil {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *JobListRequest) HasNextToken() bool {
	if o != nil && o.NextToken != nil {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *JobListRequest) SetNextToken(v string) {
	o.NextToken = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *JobListRequest) GetPerPage() int32 {
	if o == nil || o.PerPage == nil {
		var ret int32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetPerPageOk() (*int32, bool) {
	if o == nil || o.PerPage == nil {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *JobListRequest) HasPerPage() bool {
	if o != nil && o.PerPage != nil {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given int32 and assigns it to the PerPage field.
func (o *JobListRequest) SetPerPage(v int32) {
	o.PerPage = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *JobListRequest) GetPrefix() string {
	if o == nil || o.Prefix == nil {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetPrefixOk() (*string, bool) {
	if o == nil || o.Prefix == nil {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *JobListRequest) HasPrefix() bool {
	if o != nil && o.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *JobListRequest) SetPrefix(v string) {
	o.Prefix = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *JobListRequest) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListRequest) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *JobListRequest) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *JobListRequest) SetRegion(v string) {
	o.Region = &v
}

func (o JobListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowStale != nil {
		toSerialize["AllowStale"] = o.AllowStale
	}
	if o.AuthToken != nil {
		toSerialize["AuthToken"] = o.AuthToken
	}
	if o.Forwarded != nil {
		toSerialize["Forwarded"] = o.Forwarded
	}
	if o.MaxQueryTime != nil {
		toSerialize["MaxQueryTime"] = o.MaxQueryTime
	}
	if o.MinQueryIndex != nil {
		toSerialize["MinQueryIndex"] = o.MinQueryIndex
	}
	if o.Namespace != nil {
		toSerialize["Namespace"] = o.Namespace
	}
	if o.NextToken != nil {
		toSerialize["NextToken"] = o.NextToken
	}
	if o.PerPage != nil {
		toSerialize["PerPage"] = o.PerPage
	}
	if o.Prefix != nil {
		toSerialize["Prefix"] = o.Prefix
	}
	if o.Region != nil {
		toSerialize["Region"] = o.Region
	}
	return json.Marshal(toSerialize)
}

type NullableJobListRequest struct {
	value *JobListRequest
	isSet bool
}

func (v NullableJobListRequest) Get() *JobListRequest {
	return v.value
}

func (v *NullableJobListRequest) Set(val *JobListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJobListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJobListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobListRequest(val *JobListRequest) *NullableJobListRequest {
	return &NullableJobListRequest{value: val, isSet: true}
}

func (v NullableJobListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
